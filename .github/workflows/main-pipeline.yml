name: Full DevOps Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker Image
        run: docker build -t flask-app .

      - name: Save image as artifact
        run: docker save flask-app | gzip > flask-app.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: flask-image
          path: app/flask-app.tar.gz

  terraform:
    name: Provision Infrastructure
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
      - run: terraform init
      - run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

  deploy:
    name: Deploy App to EC2
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - uses: actions/checkout@v2

      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: flask-image
          path: .

      - name: SSH & Deploy Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.ec2.outputs.ec2_ip }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker load < flask-app.tar.gz
            docker run -d -p 80:80 flask-app